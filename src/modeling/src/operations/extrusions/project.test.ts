import { expect, test } from "@rbxts/jest-globals";

import comparePoints from "../../../test/helpers/comparePoints";
import { geom2, geom3 } from "../../geometries";
import { cube, torus } from "../../primitives";
import { project } from "./index";

test("project (defaults)", () => {
	const geometry0 = geom3.create();
	const geometry1 = cube({ size: 10 });
	const geometry2 = "hi" as unknown as Geom3;
	const geometry3 = [undefined] as unknown as Geom3; //DEVIATION: undefined values do not increase size of table
	const geometry4 = [undefined] as unknown as Geom3;

	const results = project({}, geometry0, geometry1, geometry2, geometry3, geometry4) as Geom2[];
	expect(results.size()).toBe(5);
	expect(() => geom2.validate(results[0])).never.toThrow();
	expect(() => geom2.validate(results[1])).never.toThrow();
	expect(results[2]).toBe(geometry2);
	expect(results[3]).toBe(geometry3);
	expect(results[4]).toBe(geometry4);
	const result = project({}, torus({ outerSegments: 4 })) as Geom2;
	expect(() => geom2.validate(result)).never.toThrow();
	const pts = geom2.toPoints(result);
	/*
	const exp: Vec2[] = [
		[0, -5.000013333333333],
		[5.000013333333333, 0],
		[-5.000013333333333, 0],
		[0, 2.9999933333333333],
		[-2.9999933333333333, 0],
		[0, -2.9999933333333333],
		[2.9999933333333333, 0],
		[0, 5.000013333333333],
	];
	*/
	//DEVIATION: the order of the points is different
	const exp: Vec2[] = [
		[0, 5.000013333333333],
		[5.000013333333333, 0],
		[-5.000013333333333, 0],
		[-2.999993333333333, 0],
		[0, 2.999993333333333],
		[0, -2.999993333333333],
		[2.999993333333333, 0],
		[0, -5.000013333333333],
	];
	expect(comparePoints(pts, exp)).toBe(true);
});

test("project (X and Y axis)", () => {
	let result = project({ axis: [1, 0, 0], origin: [1, 0, 0] }, torus({ outerSegments: 4 })) as Geom2;
	expect(() => geom2.validate(result)).never.toThrow();
	let pts = geom2.toPoints(result);
	/*
	let exp: Vec2[] = [
		[-0.19511333333333336, -4.98078],
		[0, -5.000006666666668],
		[0, 5.000006666666668],
		[0.3826666666666667, 4.923893333333334],
		[-0.3826666666666667, -4.923893333333334],
		[0.19511333333333336, -4.98078],
		[-0.19511333333333336, 4.98078],
		[-0.5555666666666668, -4.831446666666667],
		[0.5555666666666668, 4.831446666666667],
		[-0.3826666666666667, 4.923893333333334],
		[0.3826666666666667, -4.923893333333334],
		[0.7070933333333335, 4.707126666666667],
		[-0.7070933333333335, -4.707126666666667],
		[0.5555666666666668, -4.831446666666667],
		[-0.5555666666666668, 4.831446666666667],
		[0.8314600000000001, 4.555553333333334],
		[-0.8314600000000001, -4.555553333333334],
		[0.7070933333333335, -4.707126666666667],
		[-0.7070933333333335, 4.707126666666667],
		[-0.9238600000000001, -4.382700000000001],
		[0.9238600000000001, 4.382700000000001],
		[-0.8314600000000001, 4.555553333333334],
		[0.8314600000000001, -4.555553333333334],
		[0.9807933333333334, 4.1951],
		[-0.9807933333333334, -4.1951],
		[0.9238600000000001, -4.382700000000001],
		[-0.9238600000000001, 4.382700000000001],
		[1.0000200000000001, 3.999986666666667],
		[-1.0000200000000001, -3.999986666666667],
		[1.0000200000000001, -3.999986666666667],
		[-1.0000200000000001, 3.999986666666667],
		[-0.9807933333333334, 4.1951],
		[0.9807933333333334, -4.1951],
		[0.19511333333333336, 4.98078],
	];
	*/
	//DEVIATION: the order of the points is different
	let exp: Vec2[] = [
		[-0.1951133333333334, -4.98078],
		[0, -5.000006666666668],
		[0, 5.000006666666668],
		[0.3826666666666667, 4.923893333333334],
		[-0.3826666666666667, -4.923893333333334],
		[0.1951133333333334, -4.98078],
		[-0.1951133333333334, 4.98078],
		[-0.5555666666666668, -4.831446666666667],
		[0.5555666666666668, 4.831446666666667],
		[-0.3826666666666667, 4.923893333333334],
		[0.3826666666666667, -4.923893333333334],
		[0.7070933333333335, 4.707126666666667],
		[-0.7070933333333335, -4.707126666666667],
		[-0.5555666666666668, 4.831446666666667],
		[0.5555666666666668, -4.831446666666667],
		[0.8314600000000001, 4.555553333333334],
		[-0.8314600000000001, -4.555553333333334],
		[0.7070933333333335, -4.707126666666667],
		[-0.7070933333333335, 4.707126666666667],
		[-0.9238600000000001, -4.382700000000001],
		[0.9238600000000001, 4.382700000000001],
		[-0.8314600000000001, 4.555553333333334],
		[0.8314600000000001, -4.555553333333334],
		[0.9807933333333334, 4.1951],
		[-0.9807933333333334, -4.1951],
		[0.9238600000000001, -4.382700000000001],
		[-0.9238600000000001, 4.382700000000001],
		[1.00002, 3.999986666666667],
		[-1.00002, -3.999986666666667],
		[1.00002, -3.999986666666667],
		[0.9807933333333334, -4.1951],
		[-1.00002, 3.999986666666667],
		[-0.9807933333333334, 4.1951],
		[0.1951133333333334, 4.98078],
	];
	expect(comparePoints(pts, exp)).toBe(true);

	result = project({ axis: [0, 1, 0], origin: [0, -1, 0] }, torus({ outerSegments: 4 })) as Geom2;
	expect(() => geom2.validate(result)).never.toThrow();
	pts = geom2.toPoints(result);
	/*
	exp = [
		[4.98078, -0.19511333333333336],
		[5.000006666666668, 0],
		[-5.000006666666668, 0],
		[-4.923893333333334, 0.3826666666666667],
		[4.923893333333334, -0.3826666666666667],
		[4.98078, 0.19511333333333336],
		[-4.98078, -0.19511333333333336],
		[4.831446666666667, -0.5555666666666668],
		[-4.831446666666667, 0.5555666666666668],
		[-4.923893333333334, -0.3826666666666667],
		[4.923893333333334, 0.3826666666666667],
		[-4.707126666666667, 0.7070933333333335],
		[4.707126666666667, -0.7070933333333335],
		[4.831446666666667, 0.5555666666666668],
		[-4.831446666666667, -0.5555666666666668],
		[4.555553333333334, -0.8314600000000001],
		[-4.555553333333334, 0.8314600000000001],
		[4.707126666666667, 0.7070933333333335],
		[-4.707126666666667, -0.7070933333333335],
		[4.382700000000001, -0.9238600000000001],
		[-4.382700000000001, 0.9238600000000001],
		[-4.555553333333334, -0.8314600000000001],
		[4.555553333333334, 0.8314600000000001],
		[-4.1951, 0.9807933333333334],
		[4.1951, -0.9807933333333334],
		[4.382700000000001, 0.9238600000000001],
		[-4.382700000000001, -0.9238600000000001],
		[3.999986666666667, -1.0000200000000001],
		[-3.999986666666667, 1.0000200000000001],
		[3.999986666666667, 1.0000200000000001],
		[-3.999986666666667, -1.0000200000000001],
		[4.1951, 0.9807933333333334],
		[-4.1951, -0.9807933333333334],
		[-4.98078, 0.19511333333333336],
	];
	*/
	//DEVIATION: the order of the points is different
	exp = [
		[4.98078, -0.1951133333333334],
		[5.000006666666668, 0],
		[-5.000006666666668, 0],
		[-4.923893333333334, 0.3826666666666667],
		[4.923893333333334, -0.3826666666666667],
		[4.98078, 0.1951133333333334],
		[-4.98078, -0.1951133333333334],
		[4.831446666666667, -0.5555666666666668],
		[-4.831446666666667, 0.5555666666666668],
		[-4.923893333333334, -0.3826666666666667],
		[4.923893333333334, 0.3826666666666667],
		[-4.707126666666667, 0.7070933333333335],
		[4.707126666666667, -0.7070933333333335],
		[4.831446666666667, 0.5555666666666668],
		[-4.831446666666667, -0.5555666666666668],
		[-4.555553333333334, 0.8314600000000001],
		[4.555553333333334, -0.8314600000000001],
		[4.707126666666667, 0.7070933333333335],
		[-4.707126666666667, -0.7070933333333335],
		[4.382700000000001, -0.9238600000000001],
		[-4.382700000000001, 0.9238600000000001],
		[-4.555553333333334, -0.8314600000000001],
		[4.555553333333334, 0.8314600000000001],
		[-4.1951, 0.9807933333333334],
		[4.1951, -0.9807933333333334],
		[4.382700000000001, 0.9238600000000001],
		[-4.382700000000001, -0.9238600000000001],
		[3.999986666666667, -1.00002],
		[-3.999986666666667, 1.00002],
		[3.999986666666667, 1.00002],
		[-3.999986666666667, -1.00002],
		[-4.1951, -0.9807933333333334],
		[4.1951, 0.9807933333333334],
		[-4.98078, 0.1951133333333334],
	];
	expect(comparePoints(pts, exp)).toBe(true);
});
